generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String?  @unique
  email     String   @unique
  password  String?
  googleId  String?  @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @map("refreshToken")
  access_token       String?  @map("accessToken")
  expires_at         Int?     @map("expiresAt")
  token_type         String?  @map("tokenType")
  scope              String?
  id_token           String?  @map("idToken")
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Resource {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  description         String
  type                String[]
  category            String[]
  contact             Json
  address             Json
  operatingHours      Json
  eligibilityCriteria String
  servicesProvided    String[]
  targetAudience      String[]
  accessibilityFeatures String[]
  cost                String
  ratings             Json
  geoLocation         Json
  policies            String[]
  tags                String[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}